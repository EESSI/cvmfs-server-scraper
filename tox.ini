[tox]
minversion = 4
isolated_build = true
skip_missing_interpreters = true
toxworkdir = {env:TOX_WORKDIR:.tox}
envlist =
    lint
    coverage
    report
    python{38,39,310,311,312}
    clean

[gh-actions]
python =
    3.8: python38
    3.9: python39
    3.10: python310
    3.11: python311
    3.12: python312

[testenv:lint]
skip_install = true
description = Invoke black and ruff on the project.
allowlist_externals = poetry
commands =
#    poetry install -q
    poetry run black cvmfsscraper
    poetry run ruff check --fix cvmfsscraper

[testenv]
description = Run tests against {envname}.
setenv =
passenv = GITHUB_*
basepython =
    python38: python3.8
    python39: python3.9
    python310: python3.10
    python311: python3.11
    python312: python3.12
allowlist_externals =
    poetry
commands =
    poetry install 
    poetry run python --version
    poetry run pytest -n auto cvmfsscraper/tests

[testenv:clean]
description = Remove coverage data
deps = coverage
skip_install = true
allowlist_externals =
    coverage
    rm
commands =
    coverage erase

[testenv:coverage]
description = Generate coverage data
passenv = GITHUB_*
skip_install = true
allowlist_externals = poetry
commands = poetry run coverage run --source cvmfsscraper --module pytest cvmfsscraper/tests

[testenv:report]
description = Report coverage data
skip_install = true
allowlist_externals = poetry 
commands =
    poetry run coverage report -m

